{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Feedback } from '../model/feedback';\nexport let FormFeedbackComponent = class FormFeedbackComponent {\n  constructor(crud, activatedRoute, router) {\n    this.crud = crud;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.feedback = new Feedback();\n    this.feeds = [];\n  }\n  insertFeedback(feedback) {\n    this.crud.addFeedback(feedback).subscribe(message => {\n      this.message = message;\n    });\n  }\n  getFeedback(id) {\n    this.crud.getFeedback(id).subscribe(feedObs => {\n      this.feedback = feedObs;\n    });\n  }\n  onSearch() {\n    this.feedback = this.getFeedback(this.feedback.id);\n  }\n  resetMessage() {\n    this.message = \"\";\n  }\n  onSubmit() {\n    if (this.feeds.length == null) {\n      this.crud.addFeedback(this.feedback).subscribe(message => {\n        this.message = message;\n        this.router.navigate([\"tabellaFeed\"]);\n      });\n      this.feedback = new Feedback();\n    } else {\n      this.crud.addFeedback(this.feedback).subscribe(message => {\n        this.message = message;\n        this.router.navigate([\"tabellaFeed\"]);\n      });\n      this.feedback = new Feedback();\n    }\n  }\n  ngOnInit() {\n    this.crud.getTags().subscribe(tags => {\n      this.tags = tags;\n    });\n    this.idfeedback = this.activatedRoute.snapshot.params['id'];\n    this.crud.getFeedback(this.idfeedback).subscribe(feedback => {\n      this.feedback = feedback;\n    });\n  }\n};\nFormFeedbackComponent = __decorate([Component({\n  selector: 'app-form-feedback',\n  templateUrl: './form-feedback.component.html',\n  styleUrls: ['./form-feedback.component.css']\n})], FormFeedbackComponent);","map":{"version":3,"names":["Component","Feedback","FormFeedbackComponent","constructor","crud","activatedRoute","router","feedback","feeds","insertFeedback","addFeedback","subscribe","message","getFeedback","id","feedObs","onSearch","resetMessage","onSubmit","length","navigate","ngOnInit","getTags","tags","idfeedback","snapshot","params","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Sebastiano Allocca\\Documents\\GitHub\\systemFeedback\\systemFeedback\\src\\app\\form-feedback\\form-feedback.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Feedback } from '../model/feedback';\r\nimport { FeedbackService } from '../servizi/feedback.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Tag } from '../model/tag';\r\n\r\n\r\n@Component({\r\n  selector: 'app-form-feedback',\r\n  templateUrl: './form-feedback.component.html',\r\n  styleUrls: ['./form-feedback.component.css']\r\n})\r\nexport class FormFeedbackComponent implements OnInit{\r\n\r\n  message!: string;\r\n  feedback: Feedback = new Feedback();\r\n  feeds:Feedback[]=[];\r\n  idfeedback!: number;\r\n  tags!:Tag[];\r\n\r\n  \r\n\r\n  constructor(private crud: FeedbackService,private activatedRoute: ActivatedRoute, private router: Router){}\r\n  \r\n  insertFeedback(feedback: Feedback): void {\r\n    this.crud.addFeedback(feedback).subscribe((message: string) => {\r\n      this.message = message;\r\n    });\r\n  }\r\n  getFeedback(id: number): any{\r\n    this.crud.getFeedback(id).subscribe(( feedObs: Feedback) => {this.feedback = feedObs})\r\n  }\r\n\r\n  onSearch(): void {\r\n    this.feedback = this.getFeedback(this.feedback.id);\r\n   \r\n  }\r\n\r\n  resetMessage(): void{\r\n    this.message = \"\";\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if(this.feeds.length==null){\r\n      this.crud.addFeedback(this.feedback).subscribe((message:string)=>{\r\n        this.message=message;\r\n        this.router.navigate([\"tabellaFeed\"]);\r\n      });\r\n      this.feedback = new Feedback();\r\n    }\r\n    else{\r\n      this.crud.addFeedback(this.feedback).subscribe((message:string)=>{\r\n        this.message=message;\r\n        this.router.navigate([\"tabellaFeed\"]);\r\n      })\r\n      this.feedback = new Feedback();\r\n    }\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.crud.getTags().subscribe((tags: Tag[]) => {\r\n      this.tags = tags;\r\n    });\r\n\r\n    this.idfeedback = this.activatedRoute.snapshot.params ['id'];\r\n    this.crud.getFeedback(this.idfeedback).subscribe((feedback:Feedback) =>{\r\n      this.feedback = feedback;\r\n    });\r\n   \r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,QAAQ,QAAQ,mBAAmB;AAWrC,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAUhCC,YAAoBC,IAAqB,EAASC,cAA8B,EAAUC,MAAc;IAApF,KAAAF,IAAI,GAAJA,IAAI;IAA0B,KAAAC,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAPhG,KAAAC,QAAQ,GAAa,IAAIN,QAAQ,EAAE;IACnC,KAAAO,KAAK,GAAY,EAAE;EAMuF;EAE1GC,cAAcA,CAACF,QAAkB;IAC/B,IAAI,CAACH,IAAI,CAACM,WAAW,CAACH,QAAQ,CAAC,CAACI,SAAS,CAAEC,OAAe,IAAI;MAC5D,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,CAAC;EACJ;EACAC,WAAWA,CAACC,EAAU;IACpB,IAAI,CAACV,IAAI,CAACS,WAAW,CAACC,EAAE,CAAC,CAACH,SAAS,CAAGI,OAAiB,IAAI;MAAE,IAAI,CAACR,QAAQ,GAAGQ,OAAO;IAAA,CAAC,CAAC;EACxF;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACT,QAAQ,GAAG,IAAI,CAACM,WAAW,CAAC,IAAI,CAACN,QAAQ,CAACO,EAAE,CAAC;EAEpD;EAEAG,YAAYA,CAAA;IACV,IAAI,CAACL,OAAO,GAAG,EAAE;EACnB;EAEAM,QAAQA,CAAA;IACN,IAAG,IAAI,CAACV,KAAK,CAACW,MAAM,IAAE,IAAI,EAAC;MACzB,IAAI,CAACf,IAAI,CAACM,WAAW,CAAC,IAAI,CAACH,QAAQ,CAAC,CAACI,SAAS,CAAEC,OAAc,IAAG;QAC/D,IAAI,CAACA,OAAO,GAACA,OAAO;QACpB,IAAI,CAACN,MAAM,CAACc,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;MACvC,CAAC,CAAC;MACF,IAAI,CAACb,QAAQ,GAAG,IAAIN,QAAQ,EAAE;KAC/B,MACG;MACF,IAAI,CAACG,IAAI,CAACM,WAAW,CAAC,IAAI,CAACH,QAAQ,CAAC,CAACI,SAAS,CAAEC,OAAc,IAAG;QAC/D,IAAI,CAACA,OAAO,GAACA,OAAO;QACpB,IAAI,CAACN,MAAM,CAACc,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;MACvC,CAAC,CAAC;MACF,IAAI,CAACb,QAAQ,GAAG,IAAIN,QAAQ,EAAE;;EAGlC;EACAoB,QAAQA,CAAA;IACN,IAAI,CAACjB,IAAI,CAACkB,OAAO,EAAE,CAACX,SAAS,CAAEY,IAAW,IAAI;MAC5C,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB,CAAC,CAAC;IAEF,IAAI,CAACC,UAAU,GAAG,IAAI,CAACnB,cAAc,CAACoB,QAAQ,CAACC,MAAM,CAAE,IAAI,CAAC;IAC5D,IAAI,CAACtB,IAAI,CAACS,WAAW,CAAC,IAAI,CAACW,UAAU,CAAC,CAACb,SAAS,CAAEJ,QAAiB,IAAI;MACrE,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,CAAC;EAEJ;CACD;AA1DYL,qBAAqB,GAAAyB,UAAA,EALjC3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACW5B,qBAAqB,CA0DjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}