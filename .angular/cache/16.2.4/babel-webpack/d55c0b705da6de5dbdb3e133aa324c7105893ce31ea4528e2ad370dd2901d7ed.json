{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FeedbackService {\n  constructor(http) {\n    this.http = http;\n    // uri: string = 'http://localhost:8095'\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  addFeedback(feedback) {\n    alert(\"Add Feed ok!\");\n    return this.http.post(`${this.uri}/upsertFeedback`, feedback);\n  }\n  getFeedbacks(page) {\n    return this.http.get(`${this.uri}/getFeedbacks/${page}`);\n  }\n  deleteFeedback(id) {\n    return this.http.get(`${this.uri}/deleteFeedback/${id}`);\n  }\n  getFeedbacksdim() {\n    return this.http.get(`${this.uri}/getFeedbacksDim`);\n  }\n  getFeedback(id) {\n    return this.http.get(`${this.uri}/getFeedback/${id}`);\n  }\n  getTags() {\n    return this.http.get(`http://localhost:8094/getTags`);\n  }\n  static #_ = this.ɵfac = function FeedbackService_Factory(t) {\n    return new (t || FeedbackService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FeedbackService,\n    factory: FeedbackService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","FeedbackService","constructor","http","httpOptions","headers","addFeedback","feedback","alert","post","uri","getFeedbacks","page","get","deleteFeedback","id","getFeedbacksdim","getFeedback","getTags","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\feder\\OneDrive\\Documents\\GitHub\\systemFeedback\\src\\app\\servizi\\feedback.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Feedback } from '../model/feedback';\r\nimport { Tag } from '../model/tag';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeedbackService {\r\n  // uri: string = 'http://localhost:8095'\r\n  \r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type' : 'application/json',\r\n    }),\r\n  };\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  addFeedback(feedback:Feedback): Observable <string>{\r\n    alert(\"Add Feed ok!\")\r\n    return this.http.post<string>(`${this.uri}/upsertFeedback`, feedback)\r\n  }\r\n\r\n  getFeedbacks(page:number): Observable <Feedback[]>{\r\n    return  this.http.get<Feedback[]>(`${this.uri}/getFeedbacks/${page}`)\r\n  }\r\n\r\n  deleteFeedback(id:number):Observable<string>{\r\n    return this.http.get<string>(`${this.uri}/deleteFeedback/${id}`)\r\n  }\r\n\r\n  getFeedbacksdim():Observable<number>{\r\n    return this.http.get<number>(`${this.uri}/getFeedbacksDim`)\r\n  }\r\n\r\n  getFeedback(id:number):Observable <Feedback>{\r\n    return this.http.get<Feedback>(`${this.uri}/getFeedback/${id}`)\r\n  }\r\n\r\n  getTags():Observable<Tag[]>{\r\n    return this.http.get<Tag[]>(`http://localhost:8094/getTags`)\r\n  }\r\n\r\n}\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,eAAe;EAU1BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IATxB;IAGA,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIL,WAAW,CAAC;QACvB,cAAc,EAAG;OAClB;KACF;EAEsC;EAEvCM,WAAWA,CAACC,QAAiB;IAC3BC,KAAK,CAAC,cAAc,CAAC;IACrB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAS,GAAG,IAAI,CAACC,GAAG,iBAAiB,EAAEH,QAAQ,CAAC;EACvE;EAEAI,YAAYA,CAACC,IAAW;IACtB,OAAQ,IAAI,CAACT,IAAI,CAACU,GAAG,CAAa,GAAG,IAAI,CAACH,GAAG,iBAAiBE,IAAI,EAAE,CAAC;EACvE;EAEAE,cAAcA,CAACC,EAAS;IACtB,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACH,GAAG,mBAAmBK,EAAE,EAAE,CAAC;EAClE;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACb,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACH,GAAG,kBAAkB,CAAC;EAC7D;EAEAO,WAAWA,CAACF,EAAS;IACnB,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAW,GAAG,IAAI,CAACH,GAAG,gBAAgBK,EAAE,EAAE,CAAC;EACjE;EAEAG,OAAOA,CAAA;IACL,OAAO,IAAI,CAACf,IAAI,CAACU,GAAG,CAAQ,+BAA+B,CAAC;EAC9D;EAAC,QAAAM,CAAA,G;qBAnCUlB,eAAe,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfvB,eAAe;IAAAwB,OAAA,EAAfxB,eAAe,CAAAyB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}