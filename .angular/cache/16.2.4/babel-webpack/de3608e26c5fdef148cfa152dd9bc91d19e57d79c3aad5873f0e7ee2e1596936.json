{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FeedbackService {\n  constructor(http) {\n    this.http = http;\n    this.uri = \"http://localhost:8095\";\n    this.uri1 = \"http://localhost:8094\";\n    this.uri2 = \"http://localhost:8096\";\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    };\n  }\n  addFeedback(feedback) {\n    return this.http.post(`${this.uri}/upsertFeedback`, feedback);\n  }\n  getFeedbacks(page) {\n    return this.http.get(`${this.uri}/getFeedbacks/${page}`);\n  }\n  deleteFeedback(id) {\n    return this.http.get(`${this.uri}/deleteFeedback/${id}`);\n  }\n  getFeedbacksdim() {\n    return this.http.get(`${this.uri}/getFeedbacksDim`);\n  }\n  getFeedback(id) {\n    return this.http.get(`${this.uri}/getFeedback/${id}`);\n  }\n  getTags() {\n    return this.http.get(`${this.uri1}/getTags`);\n  }\n  getUsers() {\n    return this.http.get(`${this.uri2}/getUsers`);\n  }\n  static #_ = this.ɵfac = function FeedbackService_Factory(t) {\n    return new (t || FeedbackService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FeedbackService,\n    factory: FeedbackService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["HttpHeaders","FeedbackService","constructor","http","uri","uri1","uri2","httpOptions","headers","addFeedback","feedback","post","getFeedbacks","page","get","deleteFeedback","id","getFeedbacksdim","getFeedback","getTags","getUsers","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Sebastiano Allocca\\Documents\\GitHub\\systemFeedback\\systemFeedback\\src\\app\\servizi\\feedback.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Feedback } from \"../model/feedback\";\r\nimport { Tag } from \"../model/tag\";\r\nimport { User } from \"../model/user\";\r\nimport { TokenJWT } from \"../model/TokenJWT\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class FeedbackService {\r\n  uri: string = \"http://localhost:8095\";\r\n  uri1: string = \"http://localhost:8094\";\r\n  uri2: string = \"http://localhost:8096\";\r\n  currentAccount!: string;\r\n  token!: TokenJWT;\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n    }),\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addFeedback(feedback: Feedback): Observable<string> {\r\n    return this.http.post<string>(`${this.uri}/upsertFeedback`, feedback);\r\n  }\r\n\r\n  getFeedbacks(page: number): Observable<Feedback[]> {\r\n    return this.http.get<Feedback[]>(`${this.uri}/getFeedbacks/${page}`);\r\n  }\r\n\r\n  deleteFeedback(id: number): Observable<string> {\r\n    return this.http.get<string>(`${this.uri}/deleteFeedback/${id}`);\r\n  }\r\n\r\n  getFeedbacksdim(): Observable<number> {\r\n    return this.http.get<number>(`${this.uri}/getFeedbacksDim`);\r\n  }\r\n\r\n  getFeedback(id: number): Observable<Feedback> {\r\n    return this.http.get<Feedback>(`${this.uri}/getFeedback/${id}`);\r\n  }\r\n\r\n  getTags(): Observable<Tag[]> {\r\n    return this.http.get<Tag[]>(`${this.uri1}/getTags`);\r\n  }\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>(`${this.uri2}/getUsers`);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAU9D,OAAM,MAAOC,eAAe;EAY1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAXxB,KAAAC,GAAG,GAAW,uBAAuB;IACrC,KAAAC,IAAI,GAAW,uBAAuB;IACtC,KAAAC,IAAI,GAAW,uBAAuB;IAGtC,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIR,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;EAEsC;EAEvCS,WAAWA,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAS,GAAG,IAAI,CAACP,GAAG,iBAAiB,EAAEM,QAAQ,CAAC;EACvE;EAEAE,YAAYA,CAACC,IAAY;IACvB,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAa,GAAG,IAAI,CAACV,GAAG,iBAAiBS,IAAI,EAAE,CAAC;EACtE;EAEAE,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACb,IAAI,CAACW,GAAG,CAAS,GAAG,IAAI,CAACV,GAAG,mBAAmBY,EAAE,EAAE,CAAC;EAClE;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACd,IAAI,CAACW,GAAG,CAAS,GAAG,IAAI,CAACV,GAAG,kBAAkB,CAAC;EAC7D;EAEAc,WAAWA,CAACF,EAAU;IACpB,OAAO,IAAI,CAACb,IAAI,CAACW,GAAG,CAAW,GAAG,IAAI,CAACV,GAAG,gBAAgBY,EAAE,EAAE,CAAC;EACjE;EAEAG,OAAOA,CAAA;IACL,OAAO,IAAI,CAAChB,IAAI,CAACW,GAAG,CAAQ,GAAG,IAAI,CAACT,IAAI,UAAU,CAAC;EACrD;EAEAe,QAAQA,CAAA;IACN,OAAO,IAAI,CAACjB,IAAI,CAACW,GAAG,CAAS,GAAG,IAAI,CAACR,IAAI,WAAW,CAAC;EACvD;EAAC,QAAAe,CAAA,G;qBAxCUpB,eAAe,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfzB,eAAe;IAAA0B,OAAA,EAAf1B,eAAe,CAAA2B,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}