{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TagService {\n  constructor(http) {\n    this.http = http;\n    this.uri = 'http://localhost:8094';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  addTag(tag) {\n    alert(\"Add Tag ok!\");\n    return this.http.post(`${this.uri}/upsertTag`, tag);\n  }\n  getTags(page) {\n    return this.http.get(`${this.uri}/getTags/${page}`);\n  }\n  deleteTag(id) {\n    return this.http.get(`${this.uri}/deleteTag/${id}`);\n  }\n  getTagsDim() {\n    return this.http.get(`${this.uri}/getSize`);\n  }\n  getTag(id) {\n    return this.http.get(`${this.uri}/getTag/${id}`);\n  }\n}\n_class = TagService;\n_class.ɵfac = function TagService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","TagService","constructor","http","uri","httpOptions","headers","addTag","tag","alert","post","getTags","page","get","deleteTag","id","getTagsDim","getTag","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\feder\\OneDrive\\Documents\\GitHub\\systemFeedback\\src\\app\\servizi\\tag.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Tag } from '../model/tag';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TagService {\r\n  uri: string = 'http://localhost:8094'\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type' : 'application/json',\r\n    }), \r\n  };\r\n\r\n  constructor(private http:HttpClient) { }\r\n  \r\n  addTag(tag: Tag): Observable<string> {\r\n    alert(\"Add Tag ok!\")\r\n    return this.http.post<string>(`${this.uri}/upsertTag`, tag); \r\n  }\r\n  \r\n  getTags(page:number): Observable <Tag[]> {\r\n    return this.http.get<Tag[]>(`${this.uri}/getTags/${page}`)\r\n  }\r\n \r\n  deleteTag(id:number):Observable<string>{\r\n    return this.http.get<string>(`${this.uri}/deleteTag/${id}`)\r\n  }\r\n  getTagsDim():Observable<number>{\r\n    return this.http.get<number>(`${this.uri}/getSize`)\r\n  }\r\n\r\n  getTag(id:number): Observable <Tag> {\r\n    return this.http.get<Tag>(`${this.uri}/getTag/${id}`)\r\n  }\r\n\r\n\r\n  \r\n}"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,OAAM,MAAOC,UAAU;EASrBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IARxB,KAAAC,GAAG,GAAW,uBAAuB;IAErC,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIN,WAAW,CAAC;QACvB,cAAc,EAAG;OAClB;KACF;EAEsC;EAEvCO,MAAMA,CAACC,GAAQ;IACbC,KAAK,CAAC,aAAa,CAAC;IACpB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAS,GAAG,IAAI,CAACN,GAAG,YAAY,EAAEI,GAAG,CAAC;EAC7D;EAEAG,OAAOA,CAACC,IAAW;IACjB,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAQ,GAAG,IAAI,CAACT,GAAG,YAAYQ,IAAI,EAAE,CAAC;EAC5D;EAEAE,SAASA,CAACC,EAAS;IACjB,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACT,GAAG,cAAcW,EAAE,EAAE,CAAC;EAC7D;EACAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACb,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACT,GAAG,UAAU,CAAC;EACrD;EAEAa,MAAMA,CAACF,EAAS;IACd,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAM,GAAG,IAAI,CAACT,GAAG,WAAWW,EAAE,EAAE,CAAC;EACvD;;SA7BWd,UAAU;;mBAAVA,MAAU,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAVpB,MAAU;EAAAqB,OAAA,EAAVrB,MAAU,CAAAsB,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}