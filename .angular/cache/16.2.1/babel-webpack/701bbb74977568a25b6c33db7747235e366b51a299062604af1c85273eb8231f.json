{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FeedbackService {\n  constructor(http) {\n    this.http = http;\n    this.uri = 'http://localhost:8095';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  addFeedback(feedback) {\n    alert(\"Add Feed ok!\");\n    return this.http.post(`${this.uri}/upsertFeedback`, feedback);\n  }\n  getFeedbacks(page) {\n    return this.http.get(`${this.uri}/getFeedbacks/${page}`);\n  }\n  deleteFeedback(id) {\n    return this.http.get(`${this.uri}/deleteFeedback/${id}`);\n  }\n  getFeedbacksdim() {\n    return this.http.get(`${this.uri}/getFeedbacksDim`);\n  }\n  getFeedback(id) {\n    return this.http.get(`${this.uri}/getFeedback/${id}`);\n  }\n}\n_class = FeedbackService;\n_class.ɵfac = function FeedbackService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","FeedbackService","constructor","http","uri","httpOptions","headers","addFeedback","feedback","alert","post","getFeedbacks","page","get","deleteFeedback","id","getFeedbacksdim","getFeedback","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\feder\\OneDrive\\Documents\\GitHub\\systemFeedback\\src\\app\\servizi\\feedback.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Feedback } from '../model/feedback';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeedbackService {\r\n  uri: string = 'http://localhost:8095'\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type' : 'application/json',\r\n    }),\r\n  };\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  addFeedback(feedback:Feedback): Observable <string>{\r\n    alert(\"Add Feed ok!\")\r\n    return this.http.post<string>(`${this.uri}/upsertFeedback`, feedback)\r\n  }\r\n\r\n  getFeedbacks(page:number): Observable <Feedback[]>{\r\n    return  this.http.get<Feedback[]>(`${this.uri}/getFeedbacks/${page}`)\r\n  }\r\n\r\n  deleteFeedback(id:number):Observable<string>{\r\n    return this.http.get<string>(`${this.uri}/deleteFeedback/${id}`)\r\n  }\r\n\r\n  getFeedbacksdim():Observable<number>{\r\n    return this.http.get<number>(`${this.uri}/getFeedbacksDim`)\r\n  }\r\n\r\n  getFeedback(id:number):Observable <Feedback>{\r\n    return this.http.get<Feedback>(`${this.uri}/getFeedback/${id}`)\r\n  }\r\n\r\n}\r\n  \r\n"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,OAAM,MAAOC,eAAe;EAS1BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IARxB,KAAAC,GAAG,GAAW,uBAAuB;IAErC,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIN,WAAW,CAAC;QACvB,cAAc,EAAG;OAClB;KACF;EAEsC;EAEvCO,WAAWA,CAACC,QAAiB;IAC3BC,KAAK,CAAC,cAAc,CAAC;IACrB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAS,GAAG,IAAI,CAACN,GAAG,iBAAiB,EAAEI,QAAQ,CAAC;EACvE;EAEAG,YAAYA,CAACC,IAAW;IACtB,OAAQ,IAAI,CAACT,IAAI,CAACU,GAAG,CAAa,GAAG,IAAI,CAACT,GAAG,iBAAiBQ,IAAI,EAAE,CAAC;EACvE;EAEAE,cAAcA,CAACC,EAAS;IACtB,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACT,GAAG,mBAAmBW,EAAE,EAAE,CAAC;EAClE;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACb,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACT,GAAG,kBAAkB,CAAC;EAC7D;EAEAa,WAAWA,CAACF,EAAS;IACnB,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAW,GAAG,IAAI,CAACT,GAAG,gBAAgBW,EAAE,EAAE,CAAC;EACjE;;SA9BWd,eAAe;;mBAAfA,MAAe,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAfpB,MAAe;EAAAqB,OAAA,EAAfrB,MAAe,CAAAsB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}